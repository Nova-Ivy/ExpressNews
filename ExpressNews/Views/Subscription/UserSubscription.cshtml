@model IEnumerable<ExpressNews.Models.Database.Subscription>
@using Microsoft.AspNetCore.Http
@inject Microsoft​.AspNetCore​.Http.IHttpContextAccessor HttpContextAccessor

@{
    var session = HttpContextAccessor.HttpContext.Session;
    ViewData["Title"] = "UserSubscription";
}


@* @if (Model == null){
    return;
} *@

<div class="row">
    <div class="col-6">
        <h2></h2>
    </div>
    <div class="col-6">
        <h3><a id="profile" href="/Identity/Account/Manage" class="btn btn-outline-dark fw-bold  float-end">Back to Profile </a></h3>
    </div>
</div>

<body>
    <div class="row">
        <div class="col-md-5 m-3 p-3">
            @* <p>
            <a asp-action="Create">Create New</a>
            </p> *@

            <div class="container-fluid">
                @if (session.GetString("IsSubcribedUser") == "No")
                {
                    <a class="btn btn-success" role="button" asp-controller="Subscription" asp-action="Index">Get a new Subscription</a>
                }

                <article class="plan [ card ]">
                    @foreach (var item in Model)
                    {
                        @if (item.Expires > DateTime.Now)
                        {
                            <div class="inner">

                                <span class="pricing">
                                    <span>
                                        @Html.DisplayFor(modelItem => item.Price) <small>Kr</small>
                                    </span>
                                </span>
                                <br />
                                @*  <h1 class="title"> @Html.DisplayFor(modelItem => item.SubscriptionTypeName)</h1> *@
                                <div id="subDetails"></div>

                                <button class="button" disabled>
                                    <strong>  @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Expires))</strong>

                                </button>
                            </div>
                        }

                    }

                </article>

            </div>

        </div>

        <div class="col-md-6 m-3">
            <br />
            <h2>Your Subscription History</h2>
            @* History subscription *@
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.SubscriptionTypeName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Price)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Created)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Expires)
                        </th>
                        @* <th>
                        @Html.DisplayNameFor(model => model.PaymentComplete)
                        </th> *@
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        @if (item.Expires < DateTime.Now)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SubscriptionTypeName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Created))
                                </td>
                                <td>
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Expires))
                                </td>
                                @*  <td>
                        @Html.DisplayFor(modelItem => item.PaymentComplete)
                        </td> *@
                                @* <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td> *@
                            </tr>
                        }

                    }
                </tbody>
            </table>
        </div>

    </div>
    @{
        string htmlText = Model.Where(a => a.Expires > DateTime.Now).FirstOrDefault()?.SubsTypeDetails ?? "";

    }

    <script>
        window.addEventListener('DOMContentLoaded', function () {

            var htmlText = `@Html.Raw(htmlText)`;
            var element2 = document.getElementById("subDetails");
            if (element2) {
                element2.innerHTML = htmlText;
            }

        });
    </script>

</body>

<style>

    body {
        font-family: "Spline Sans", sans-serif;
        line-height: 1.5;
        min-height: 100vh;
        background-color: darkblue);
    }

    .cards {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-start;
        flex-wrap: wrap;
        justify-content: center;
        gap: 2.5rem;
        width: 100%;
        max-width: 1000px;
        margin: 10vh auto;
    }

    .card {
        border-radius: 12px;
        box-shadow: 0 30px 30px -25px rgba(aqua, .25);
        max-width: 300px;
    }

    .information {
        background-color: var(--c-white);
        padding: 1.5rem;
        .tag

    {
        display: inline-block;
        background-color: var(--c-titan-white);
        color: var(--c-indigo);
        font-weight: 600;
        font-size: 0.875rem;
        padding: 0.5em 0.75em;
        line-height: 1;
        border-radius: 6px;
        & + *

    {
        margin-top: 1rem;
    }

    }

    .title {
        font-size: 1.5rem;
        color: var(--c-void);
        line-height: 1.25;
        & + *

    {
        margin-top: 1rem;
    }

    }

    .info {
        color: var(--c-charcoal);
        & + *

    {
        margin-top: 1.25rem;
    }

    }

    .button {
        font: inherit;
        line-height: 1;
        background-color: var(--c-white);
        border: 2px solid var(--c-indigo);
        color: var(--c-indigo);
        padding: 0.5em 1em;
        border-radius: 6px;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        justify-content: space-between;
        gap: 0.5rem;
        &:hover, &:focus

    {
        background-color: var(--c-indigo);
        color: var(--c-white);
    }

    }

    .details {
        display: flex;
        gap: 1rem;
        div

    {
        padding: .75em 1em;
        background-color: var(--c-titan-white);
        border-radius: 8px;
        display: flex;
        flex-direction: column-reverse;
        gap: .125em;
        flex-basis: 50%;
    }

    dt {
        font-size: .875rem;
        color: var(--c-cold-purple);
    }

    dd {
        color: var(--c-indigo);
        font-weight: 600;
        font-size: 1.25rem;
    }

    }
    }


    .plan {
        padding: 10px;
        background-color: var(--c-white);
        color: var(--c-del-rio);
        strong

    {
        font-weight: 600;
        color: var(--c-coffee);
    }

    .inner {
        padding: 20px;
        padding-top: 40px;
        background-color: aliceblue;
        border-radius: 12px;
        position: relative;
        overflow: hidden;
    }

    .pricing {
        position: absolute;
        top: 0;
        right: 0;
        background-color: aqua;
        border-radius: 99em 0 0 99em;
        display: flex;
        align-items: center;
        padding: .625em .75em;
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--c-coffee);
        small

    {
        color: black;
        font-size: .75em;
        margin-left: .25em;
    }

    }

    .title {
        font-weight: 600;
        font-size: 1.25rem;
        color: blue;
        & + *;

    {
        margin-top: .75rem;
    }

    }

    .info {
        & + *

    {
        margin-top: 1rem;
    }

    }

    .features {
        display: flex;
        flex-direction: column;
        li

    {
        display: flex;
        align-items: center;
        gap: .5rem;
        & + *

    {
        margin-top: .75rem;
    }

    }

    .icon {
        background-color: var(--c-java);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        color: var(--c-white);
        border-radius: 50%;
        width: 20px;
        height: 20px;
        svg

    {
        width: 14px;
        height: 14px;
    }

    }

    & + * {
        margin-top: 1.25rem;
    }

    }

    button {
        font: inherit;
        background-color: mediumpurple;
        border-radius: 6px;
        color: white;
        font-weight: 500;
        font-size: 1.125rem;
        width: 100%;
        border: 0;
        padding: 1em;
        &:hover, &:focus

    {
        background-color: var(--c-governor);
    }

    }
    }
</style>