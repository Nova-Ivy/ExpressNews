@* @model IEnumerable<ExpressNews.Models.ViewModel.UserVM> *@
@{
    ViewBag.Title = "Admin Dashboard";
    
}

<h2>Admin Dashboard</h2>
<style>
    .chart-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .chart-box {
        width: 20%;
    }
</style>
<div class="chart-container">
    <div class="chart-box">
        <canvas id="userChart" width="400" height="300"></canvas>
    </div>
    <div class="chart-box">
        <canvas id="subscriptionChart" width="400" height="300"></canvas>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
<script>
    //Count all user except admin
    var ctx = document.getElementById('userChart').getContext('2d');
    var userChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Members', 'Journalists', 'Editors'],
            datasets: [{
                label: '# of Users',
                data: [@ViewBag.MemberCount,@ViewBag.JournalistCount,@ViewBag.EditorCount],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(75, 192, 192, 0.6)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(75, 192, 192, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    //Subscriber procentage
    var ctxPie = document.getElementById('subscriptionChart').getContext('2d');
    var subscriptionChart = new Chart(ctxPie, {
        type: 'pie',
        data: {
            labels: ['Subscribed', 'Non-Subscribed'],
            datasets: [{
                data: [@ViewBag.SubscribedCount, @ViewBag.NonSubscribedCount],
                backgroundColor: [
                    'rgb(255,0,0)',
                    'rgb(54, 162, 235)'
                ],
                borderColor: [
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 99, 132, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                datalabels: {
                    formatter: (value, context) => {
                        let sum = 0;
                        let dataArr = context.chart.data.datasets[0].data;
                        dataArr.map(data => {
                            sum += data;
                        });
                        let percentage = (value * 100 / sum).toFixed(2) + "%";
                        return percentage;
                    },
                    color: '#fff',
                    font: {
                        weight: 'bold',
                        size: 14
                    }
                }
            }
        },
        plugins: [ChartDataLabels]
    });
        // options: {
        //     responsive: true
        // }
  
</script>
<div>
    <p>
        Basic Subscriptions:@ViewBag.bascicCount
    </p>
    <p>

        Premium Subscriptions:@ViewBag.premiumCount
    </p>
    <p>
        NonSubcribed:@ViewBag.NonSubscribedCount
    </p>
</div>

